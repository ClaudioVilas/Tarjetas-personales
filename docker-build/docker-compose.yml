services:
  # Servicio de configuración de IP dinámica
  ip-config:
    build:
      context: .
      dockerfile: services/ip-config.Dockerfile
    container_name: tarjetas-ip-config
    volumes:
      - shared-config:/shared/config
    networks:
      - tarjetas-network
    restart: unless-stopped
    environment:
      - EXTERNAL_IP=172.40.210.24
    healthcheck:
      test: ["CMD", "test", "-f", "/shared/config/network-config.json"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend - Generación de PDFs
  backend:
    build:
      context: .
      dockerfile: services/backend.Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./shared/pdf-output:/shared/pdf-output
      - ../cuaderno-feria-cueros/fotos:/app/fotos
    networks:
      - tarjetas-network
    depends_on:
      ip-config:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:5000/health').read()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio de Email
  email-service:
    build:
      context: .
      dockerfile: services/email.Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: tarjetas-email
    ports:
      - "5001:5001"
    volumes:
      - shared-config:/shared/config:ro
      - ./data/email/attachments:/app/attachments:ro
      - ../La Pampa Cueros:/app/la-pampa-files:ro
      - '../Pdf Feria:/shared/pdf-output:rw'
    networks:
      - tarjetas-network
    depends_on:
      ip-config:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - CONFIG_DIR=/shared/config
      - PDF_FOLDER=/shared/pdf-output
      - ATTACHMENTS_FOLDER=/app/la-pampa-files
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend - Interface de usuario
  frontend:
    build:
      context: .
      dockerfile: services/frontend.Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: tarjetas-frontend
    ports:
      - "80:80"
      - "5173:80"  # Puerto alternativo para desarrollo
    volumes:
      - shared-config:/shared/config:ro
    networks:
      - tarjetas-network
    depends_on:
      ip-config:
        condition: service_healthy
      backend:
        condition: service_healthy
      email-service:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - CONFIG_DIR=/shared/config
      - DEV_MODE=true
      - FRONTEND_PORT=5173
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  tarjetas-network:
    driver: bridge
    name: tarjetas-network
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  shared-config:
    driver: local
    name: tarjetas-shared-config
  shared-pdf:
    driver: local
    name: tarjetas-shared-pdf
